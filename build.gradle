buildscript {
  dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
  }
}

plugins {
  id 'org.owasp.dependencycheck' version '5.3.1'
  id 'com.github.ben-manes.versions' version '0.27.0'
}

def buildNumber = System.getenv("RELEASE_VERSION")?.replace("refs/tags/", "") ?: "DEV-SNAPSHOT"

allprojects {
  group 'uk.gov.hmcts.reform'
  version buildNumber

  apply plugin: 'java'
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'
  apply plugin: 'checkstyle'
  apply plugin: 'com.jfrog.bintray'
  apply plugin: 'jacoco'
  apply plugin: 'com.github.ben-manes.versions'
  apply plugin: 'pmd'

  checkstyle {
    toolVersion = '8.24'
    maxWarnings = 0
    getConfigDirectory().set(new File(rootDir, "config/checkstyle"))
  }

  pmd {
    toolVersion = "6.25.0"
    incrementalAnalysis = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$rootProject.buildDir/reports/pmd/$project.name")
    ruleSetFiles = files("$rootProject.projectDir/config/pmd/ruleset.xml")
  }

  jacoco {
    toolVersion = "0.8.4"
  }

  sourceCompatibility = 1.8

  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }

  configurations.all {
    resolutionStrategy {
      eachDependency { DependencyResolveDetails details ->
        if (details.requested.group in ['com.fasterxml.jackson.core', 'com.fasterxml.jackson.module', 'com.fasterxml.jackson.datatype']) {
          details.useVersion '2.9.9'
        }
        if (details.requested.name == 'jackson-databind') {
          details.useVersion '2.9.10'
        }
        if (details.requested.name == 'guava') {
          details.useVersion '28.0-jre'
        }
      }
    }
  }

  dependencies {
    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '6.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.30'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    testCompile group: 'junit', name: 'junit', version: '4.13'
  }

  // before committing a change, make sure task still works
  dependencyUpdates {
    def isNonStable = { String version ->
      def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
      def regex = /^[0-9,.v-]+$/
      return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
      return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
  }

  dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = "$rootDir/config/owasp/suppressions.xml"
    analyzers {
      // Disable scanning of .NET related binaries
      assemblyEnabled = false
    }
  }
}

task codeCoverageReport(type: JacocoReport, dependsOn: allprojects*.test) {

  // Gather execution data from all subprojects
  // (change this if you e.g. want to calculate unit test/integration test coverage separately)
  executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

  // Add all relevant sourcesets from the subprojects
  allprojects.each {
    sourceSets it.sourceSets.main
  }

  reports {
    csv.enabled = false
    html.enabled = true
    html.destination = file("${buildDir}/reports/jacoco/html")
    xml.enabled = true
    xml.destination = file("${buildDir}/reports/jacoco/jacocoTestReport.xml")
  }
}

java {
  withJavadocJar()
  withSourcesJar()
}

publishing {
  publications {
    Main(MavenPublication) {
      from components.java
      groupId project.group
      artifactId 'logging'
      version project.version
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['Main']
  publish = true
  pkg {
    repo = 'hmcts-maven'
    name = 'logging'
    userOrg = 'hmcts'
    licenses = ['MIT']
    vcsUrl = 'https://github.com/hmcts/java-logging'
    version {
      name = project.version
    }
  }
}

dependencies {
  testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.1'
  testCompile group: 'org.assertj', name: 'assertj-core', version: '3.15.0'
  testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
  testCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
  testCompile group: 'com.google.code.tempus-fugit', name: 'tempus-fugit', version: '1.1'
}
